CODE
1:  call main, 0
2:  exit
3:  PROCBEGIN testi
4:  alloc 5
5:  blt ^%1, ^%0, 7
6:  goto 9
7:  move ^%0, _26
8:  goto 16
9:  move 1, %3
10:  add ^%0, %3, %2
11:  param @%2
12:  param %1
13:  call testi, 2
14:  move _26, %4
15:  move %4, _26
16:  free 5
17:  PROCEND
18:  PROCBEGIN sum
19:  alloc 3
20:  fadd ^%1, ^%0, %2
21:  move %2, _28
22:  free 3
23:  PROCEND
24:  PROCBEGIN externalsum
25:  alloc 1
26:  add _3, _2, %0
27:  move %0, _30
28:  free 1
29:  PROCEND
30:  PROCBEGIN testc
31:  alloc 30
32:  move 1, %3
33:  move 1, %4
34:  sub %3, %4, %2
35:  load ^%1, %2, %5
36:  move 1, %7
37:  move 1, %8
38:  sub %7, %8, %6
39:  load ^%0, %6, %9
40:  add %5, %9, %10
41:  print "$$t13 = "
42:  outp %10
43:  newl
44:  move 2, %12
45:  move 1, %13
46:  sub %12, %13, %11
47:  load ^%1, %11, %14
48:  move 2, %16
49:  move 1, %17
50:  sub %16, %17, %15
51:  load ^%0, %15, %18
52:  add %14, %18, %19
53:  print "$$t22 = "
54:  outp %19
55:  newl
56:  move 3, %21
57:  move 1, %22
58:  sub %21, %22, %20
59:  load ^%1, %20, %23
60:  move 3, %25
61:  move 1, %26
62:  sub %25, %26, %24
63:  load ^%0, %24, %27
64:  add %23, %27, %28
65:  print "$$t31 = "
66:  outp %28
67:  newl
68:  move 500, %29
69:  move %29, _32
70:  free 30
71:  PROCEND
72:  PROCBEGIN testb
73:  alloc 6
74:  print "A = "
75:  outp ^%1
76:  newl
77:  print "B = "
78:  outp ^%0
79:  newl
80:  print "C = "
81:  foutp ^%5
82:  newl
83:  print "D = "
84:  foutp ^%4
85:  newl
86:  print "E = "
87:  foutp ^%3
88:  newl
89:  print "F = "
90:  foutp ^%2
91:  newl
92:  free 6
93:  PROCEND
94:  PROCBEGIN main
95:  alloc 207
96:  move 1, _34
97:  uminus _34, _33
98:  move _33, _4
99:  move 0, _35
100:  move _35, _3
101:  move 1, _36
102:  move _36, _2
103:  move 2, _37
104:  move _37, _1
105:  move 3, _38
106:  move _38, _0
107:  print "H = "
108:  outp _4
109:  newl
110:  move 1, _40
111:  uminus _40, _39
112:  mul _4, _39, _41
113:  move 3, _43
114:  add _41, _43, _42
115:  move _42, _4
116:  print "H = "
117:  outp _4
118:  newl
119:  move 1.1, _45
120:  fuminus _45, _44
121:  move _44, _24
122:  move 1.1, _46
123:  move _46, _23
124:  move 2.1, _47
125:  move _47, _22
126:  move 3.1, _48
127:  move _48, _21
128:  move 4.1, _49
129:  move _49, _20
130:  move 1, _51
131:  move 1, _52
132:  sub _51, _52, _50
133:  move 1, _53
134:  stor _53, _50, _5
135:  move 2, _55
136:  move 1, _56
137:  sub _55, _56, _54
138:  move 2, _57
139:  stor _57, _54, _5
140:  move 3, _59
141:  move 1, _60
142:  sub _59, _60, _58
143:  move 3, _61
144:  stor _61, _58, _5
145:  move 4, _63
146:  move 1, _64
147:  sub _63, _64, _62
148:  move 4, _65
149:  stor _65, _62, _5
150:  move 5, _67
151:  move 1, _68
152:  sub _67, _68, _66
153:  move 5, _69
154:  stor _69, _66, _5
155:  move 1, _71
156:  add _3, _71, _70
157:  move 1, _73
158:  sub _70, _73, _72
159:  stor _4, _72, _10
160:  move 1, _75
161:  sub _1, _75, _74
162:  stor _3, _74, _10
163:  move 1, _77
164:  sub _0, _77, _76
165:  stor _2, _76, _10
166:  move 1, _79
167:  sub _4, _79, _78
168:  stor _1, _78, _10
169:  add _2, _4, _80
170:  move 1, _82
171:  sub _80, _82, _81
172:  stor _0, _81, _10
173:  move 0, _84
174:  sub _4, _84, _83
175:  stor _24, _83, _15
176:  move 0, _86
177:  sub _3, _86, _85
178:  stor _23, _85, _15
179:  move 0, _88
180:  sub _2, _88, _87
181:  stor _22, _87, _15
182:  move 0, _90
183:  sub _1, _90, _89
184:  stor _21, _89, _15
185:  move 0, _92
186:  sub _0, _92, _91
187:  stor _20, _91, _15
188:  move 6, _93
189:  blt _2, _93, 191
190:  goto 204
191:  print "J = "
192:  outp _2
193:  newl
194:  move 1, _95
195:  sub _2, _95, _94
196:  load _10, _94, _96
197:  print "$$t96 = "
198:  outp _96
199:  newl
200:  move 1, _98
201:  add _2, _98, _97
202:  move _97, _2
203:  goto 188
204:  ble _3, _4, 206
205:  goto 219
206:  print "I = "
207:  outp _3
208:  newl
209:  move 0, _100
210:  sub _3, _100, _99
211:  load _15, _99, _101
212:  print "$$t101 = "
213:  foutp _101
214:  newl
215:  move 1, _103
216:  add _3, _103, _102
217:  move _102, _3
218:  goto 204
219:  move 1, _104
220:  param @_104
221:  move 4, _105
222:  param @_105
223:  call testi, 2
224:  move _26, _106
225:  print "$$t106 = "
226:  outp _106
227:  newl
228:  move 1, _108
229:  move 2, _109
230:  add _108, _109, _107
231:  ltof _107, _110
232:  move 3.1, _112
233:  fadd _110, _112, _111
234:  move 4.3, _114
235:  fsub _111, _114, _113
236:  move 0.2, _116
237:  fadd _113, _116, _115
238:  move 5, _119
239:  ltof _119, _117
240:  fmul _117, _115, _118
241:  move 4, _122
242:  ltof _122, _120
243:  f _118, _120, _121
244:  move _121, _20
245:  move 5, _124
246:  move 7, _125
247:  mul _124, _125, _123
248:  move _123, _0
249:  ltof _1, _126
250:  fmul _126, _21, _127
251:  move _127, _21
252:  print "X = "
253:  foutp _20
254:  newl
255:  print "L = "
256:  outp _0
257:  newl
258:  print "V = "
259:  foutp _21
260:  newl
261:  move 3, _129
262:  move 1, _130
263:  sub _129, _130, _128
264:  load _10, _128, _131
265:  move 4, _133
266:  add _131, _133, _132
267:  move _132, _3
268:  print "I = "
269:  outp _3
270:  newl
271:  move 1, _135
272:  move 1, _136
273:  sub _135, _136, _134
274:  move 1, _137
275:  stor _137, _134, _10
276:  move 2, _139
277:  move 1, _140
278:  sub _139, _140, _138
279:  move 2, _141
280:  stor _141, _138, _10
281:  move 3, _143
282:  move 1, _144
283:  sub _143, _144, _142
284:  move 3, _145
285:  stor _145, _142, _10
286:  move 4, _147
287:  move 1, _148
288:  sub _147, _148, _146
289:  move 4, _149
290:  stor _149, _146, _10
291:  move 5, _151
292:  move 1, _152
293:  sub _151, _152, _150
294:  move 5, _153
295:  stor _153, _150, _10
296:  param @_5
297:  param @_10
298:  call testc, 2
299:  move _32, _154
300:  move _154, _3
301:  print "I = "
302:  outp _3
303:  newl
304:  move 0, _155
305:  move _155, _3
306:  move 0, _156
307:  move _156, _2
308:  move 0, _157
309:  beq _3, _157, 311
310:  goto 315
311:  move 0, _158
312:  outp _158
313:  newl
314:  goto 332
315:  move 1, _159
316:  beq _3, _159, 318
317:  goto 322
318:  move 1, _160
319:  outp _160
320:  newl
321:  goto 332
322:  move 2, _161
323:  beq _3, _161, 325
324:  goto 329
325:  move 2, _162
326:  outp _162
327:  newl
328:  goto 332
329:  move 99, _163
330:  outp _163
331:  newl
332:  move 1, _164
333:  move _164, _3
334:  move 0, _165
335:  beq _3, _165, 337
336:  goto 341
337:  move 0, _166
338:  outp _166
339:  newl
340:  goto 358
341:  move 1, _167
342:  beq _3, _167, 344
343:  goto 348
344:  move 1, _168
345:  outp _168
346:  newl
347:  goto 358
348:  move 2, _169
349:  beq _3, _169, 351
350:  goto 355
351:  move 2, _170
352:  outp _170
353:  newl
354:  goto 358
355:  move 99, _171
356:  outp _171
357:  newl
358:  move 2, _172
359:  move _172, _3
360:  move 0, _173
361:  beq _3, _173, 363
362:  goto 367
363:  move 0, _174
364:  outp _174
365:  newl
366:  goto 384
367:  move 1, _175
368:  beq _3, _175, 370
369:  goto 374
370:  move 1, _176
371:  outp _176
372:  newl
373:  goto 384
374:  move 2, _177
375:  beq _3, _177, 377
376:  goto 381
377:  move 2, _178
378:  outp _178
379:  newl
380:  goto 384
381:  move 99, _179
382:  outp _179
383:  newl
384:  move 3, _180
385:  move _180, _3
386:  move 0, _181
387:  beq _3, _181, 389
388:  goto 393
389:  move 0, _182
390:  outp _182
391:  newl
392:  goto 410
393:  move 1, _183
394:  beq _3, _183, 396
395:  goto 400
396:  move 1, _184
397:  outp _184
398:  newl
399:  goto 410
400:  move 2, _185
401:  beq _3, _185, 403
402:  goto 407
403:  move 2, _186
404:  outp _186
405:  newl
406:  goto 410
407:  move 99, _187
408:  outp _187
409:  newl
410:  move 0, _188
411:  blt _3, _188, 413
412:  goto 417
413:  move 0, _189
414:  outp _189
415:  newl
416:  goto 420
417:  move 1, _190
418:  outp _190
419:  newl
420:  ble _3, _2, 422
421:  goto 426
422:  move 0, _191
423:  outp _191
424:  newl
425:  goto 429
426:  move 1, _192
427:  outp _192
428:  newl
429:  bne _3, _2, 431
430:  goto 435
431:  move 0, _193
432:  outp _193
433:  newl
434:  goto 438
435:  move 1, _194
436:  outp _194
437:  newl
438:  bge _3, _2, 440
439:  goto 444
440:  move 0, _195
441:  outp _195
442:  newl
443:  goto 447
444:  move 1, _196
445:  outp _196
446:  newl
447:  bgt _3, _2, 449
448:  goto 453
449:  move 0, _197
450:  outp _197
451:  newl
452:  goto 456
453:  move 1, _198
454:  outp _198
455:  newl
456:  print "I = "
457:  outp _3
458:  newl
459:  print "J = "
460:  outp _2
461:  newl
462:  call externalsum, 0
463:  move _30, _199
464:  ltof _199, _200
465:  move 1.1, _202
466:  fadd _200, _202, _201
467:  move 3.1, _203
468:  param @_203
469:  param @_201
470:  call sum, 2
471:  move _28, _204
472:  print "$$t204 = "
473:  foutp _204
474:  newl
475:  param @_20
476:  param @_20
477:  param @_20
478:  param @_20
479:  move 2, _205
480:  param @_205
481:  move 1, _206
482:  param @_206
483:  call testb, 6
484:  free 207
485:  PROCEND