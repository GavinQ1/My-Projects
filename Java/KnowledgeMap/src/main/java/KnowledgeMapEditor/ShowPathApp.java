/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KnowledgeMapEditor;

import Lib.EnhanceAppView;
import Lib.Stack;
import KnowledgeNodeModels.KnowledgeNode;
import java.util.ArrayList;

/**
 *
 * @author Gavin
 */
public class ShowPathApp extends javax.swing.JDialog {
    public static final void run(Stack<ArrayList<KnowledgeNode>> path, 
            ArrayList<KnowledgeNode> selecteds,
            ArrayList<KnowledgeNode> dests) {
        ShowPathApp.run(path, selecteds, dests, true);
    }

    public static final void run(Stack<ArrayList<KnowledgeNode>> path, 
            ArrayList<KnowledgeNode> selecteds,
            ArrayList<KnowledgeNode> dests, boolean center) {
        EnhanceAppView.enhanceVision();
        ShowPathApp view = new ShowPathApp(path, selecteds, dests);
        if (center)
            view.setLocationRelativeTo(null);
        view.setVisible(true);
    }
    
    private Stack<String> levels;
    private String info;

    /**
     * Creates new form ShowPathApp
     */
    public ShowPathApp(Stack<ArrayList<KnowledgeNode>> path, 
            ArrayList<KnowledgeNode> selecteds,
            ArrayList<KnowledgeNode> dests) {
        this.levels = new Stack<>();
        this.info = generatePathInText(path, selecteds, dests);
        initComponents();
    }
    
    private String generatePathInText(Stack<ArrayList<KnowledgeNode>> path, 
            ArrayList<KnowledgeNode> selecteds,
            ArrayList<KnowledgeNode> dests) {
        String tmp = memberToString(dests);
        if (tmp.length() > 0)
            levels.push(tmp);
        int maxL = tmp.length();
        tmp = memberToString(selecteds);
        if (tmp.length() > 0)
            levels.push(tmp);
        if (tmp.length() > maxL)
                maxL = tmp.length();
        for (ArrayList<KnowledgeNode> l : path) {
            tmp = memberToString(l);
            System.out.println(tmp);
            levels.push(tmp);
            if (tmp.length() > maxL)
                maxL = tmp.length();
        }
        String res = "",  setoffSpacer, arrow;
        int setoff;
        while (!levels.isEmpty()) {
            tmp = levels.pop();
            setoff = (maxL - tmp.length()) / 2;
            setoffSpacer = "";
            for (int i = 0; i < setoff; i++)
                setoffSpacer += " ";
            res += setoffSpacer + tmp;
            if (!levels.isEmpty()) {
                setoff = + setoffSpacer.length() + tmp.length()/2;
                arrow = "";
                for (int i = 0; i < setoff; i++)
                    arrow += " ";
                res += "\n\n" + arrow + "|\n" + arrow + "|\n" + arrow + "V\n\n";
            }
        }
        
        
        return res;
    }
    
    private String memberToString(ArrayList<KnowledgeNode> l) {
        String res = "";
        if (l.isEmpty()) return res;
        for (int i = 0; i < l.size()-1; i++) {
            res += l.get(i).getName() + ", ";
        }
        res += l.get(l.size()-1).getName();
        return res;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Path Viewer");
        setMinimumSize(new java.awt.Dimension(447, 515));
        setModal(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jEditorPane1.setEditable(false);
        jEditorPane1.setFont(new java.awt.Font("华文细黑", 1, 14)); // NOI18N
        jEditorPane1.setText(info);
        jScrollPane3.setViewportView(jEditorPane1);

        getContentPane().add(jScrollPane3, "card2");
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
